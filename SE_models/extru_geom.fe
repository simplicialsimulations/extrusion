// extru_geom.fe
//
// To be processed by Surface Evolver (http://facstaff.susqu.edu/brakke/evolver/evolver.html)
// Skeleton geometry file, with definition of sub-element attributes for cell extrusion
// The full geometry is a round cylinder surrounded by a ring of neighbours. The full geometrical
// details will be generated by logic in the 'command' file
//
// By: Lester Lin (lesterlin88@gmail.com)
//****************************************************************************************************

soapfilm

keep_originals

scale 2e-03 fixed

gravity_constant 0

//****************************************************************************************************
// Sub-element attributes

define vertex attribute apiringvertex integer	// to label the ring position of vertex, index increases
												// outwards from center
define vertex attribute v_side integer			// to label the side number of vertex, in anti-clockwise
												// direction
define vertex attribute api_center integer		// value=1 to label the center apical vertex
define vertex attribute api_ringvangle real		// to indicate the angle of the vertex
define vertex attribute onspoke_vertex integer	// value=1 to indicate vertices that lie along the main
												// angles of the spokes from apical center vertex, across
												// the apical rings
define vertex attribute v_attr_c integer		// To label lateral vertices of center cell
define vertex attribute v_attr_n integer		// To label lateral vertices from immediate neighbour

define vertex attribute cringvertex integer		// To label the band number of the vertex on each cringedge
												// per band on center cell
define vertex attribute base_center integer		// To label center vertex of base
define vertex attribute tempmidposition_x real	// To temporarily store the midvertex position during subdivision
define vertex attribute tempmidposition_y real	// To temporarily store the midvertex position during subdivision
define vertex attribute tempmidposition_z real	// To temporarily store the midvertex position during subdivision

define edge attribute apiringedge integer		// to label the ring position of horizontal edge,
												// index increases outwards from center
define edge attribute apibandwidth integer		// to label the position of bands within apical pole,
												// increasing away from the pole spoke triangles
define edge attribute apibandsq integer			// value=1 to label the position of the slanted apical edges
												// that within each apical band
define edge attribute api_spoke integer			// value=1 to label the apical spoke edges
define edge attribute e_side integer			// to label the side number of edge, in anti-clockwise direction
define edge attribute e_angle_side integer		// to label the side number of the vertical edges at the apical
												// pole that align with the 6 main angles pointing out from the
												// apical center vertex
define edge attribute e_slant integer			// value=1 for the apical slant edge that slants to the left,
												// value=2 for apical slant towards the right
define edge attribute api_vert integer 			// value=1 for the vertical edges that lie along the main
												// angles of the spokes from apical center vertex

define edge attribute cringlinker integer		// To label adhesion linkers between center cell & neighbours

define edge attribute cringedge integer			// To label the band number of the horizontal edges
												// underlying each band from center cell
define edge attribute cbandwidth integer		// To label the band number of the vertical edge
												// within each band on center cell
define edge attribute bandsq integer			// To label the band number of only e_diag from each
												// discretization, so as to have a handle only on diagonal edges
define edge attribute e_diag integer			// To assign a non-zero attribute (value = 1) to label the
												// diagonal edge of each square/rectangular surface discretization
define edge attribute base_spoke integer		// To label edges that are spokes at the center of basal pole

define edge attribute bandthickness real		// To record the band thickness
define edge attribute banddepoly real 			// To record band depolymerization rate
define edge attribute bandeqmthickness real		// To record band equilibrium thickness
define edge attribute bandviscous real			// To record band viscosity
define edge attribute zetab real				// To record band zeta value, which is the contractility
												// cortical active stress
define edge attribute zetab_new real			// To record band new zeta value after energy minimization step

define edge attribute bwidth_before real		// To record band width before energy minimization step
define edge attribute blength_before real		// To record band length before energy minimization step

define edge attribute bpolearea_before real		// To record centre cell base pole area before energy minimization
define edge attribute apolearea_before real		// To record centre cell apical pole area before energy minimization
define edge attribute distfrom real				// To record the distance of a band from the equator
define edge attribute distfrom_cls real			// To record the distance between the boundary of a band, which is
												// closest away from the equator, from the 'equitorial_position'

define edge attribute ringthickness real		// To record the ring thickness
define edge attribute ringdepoly real 			// To record ring depolymerization rate
define edge attribute ringeqmthickness real		// To record ring equilibrium thickness
define edge attribute ringviscous real			// To record ring viscosity
define edge attribute zetar real				// To record ring zeta value, which is the contractility
												// cortical active stress
define edge attribute zetar_new real			// To record ring new zeta value after energy minimization step
define edge attribute ringdistfrom real			// To record the distance of a ring from the equator
define edge attribute azimu_lbefore real		// To record the azimuthal length of the particular ring before
												// energy minimization
define edge attribute azimubp_lbefore real		// To record the azimuthal length of ring 1 before energy minimization
define edge attribute azimuap_lbefore real		// To record the azimuthal length of ring_max before energy minimization
define edge attribute azimu_comblbefore real	// To record the combined azimuthal lengths of 2 rings for
												// calculating azimuthal strain rate
define edge attribute azimu_band_comblbefore real	// To record the combined azimuthal lengths of 2 rings for
													// calculating azimuthal strain rate, for the bands above equator
define edge attribute azimu_eqr_comblbefore real	// To record the combined azimuthal lengths of 2 rings for
													// calculating azimuthal strain rate, only for the equator ring
define edge attribute azimu_ring_comblbefore real	// To record the combined azimuthal lengths of 2 rings for
													// calculating azimuthal strain rate, for rings above equator
define edge attribute azimunrmax_lbefore real		// To record the ring length of nring_max for
													// topmost lateral nring for neighbour
define edge attribute azimunrmax_comblbefore real	// To record the combined azimuthal ring lengths of 'nring_max'
													// & 'nring_max-1' for topmost lateral nring for neighbour

define facet attribute apispoke_tri integer		// to label the apical spoke triangles on center cell
define facet attribute apibandtri integer		// to label the apical band facet position, increasing away
												// from the pole spoke triangles

define facet attribute f_side integer			// To label facets corresponding to each side of a cube
define facet attribute tri integer				// To label the band number on center cell, starting from 1
define facet attribute basespoke_tri integer	// To label the basal spoke triangles on center cell
define facet attribute apicen integer		// this is to mark the special flat apical top of centre cell

// Attributes for printing energy
define facet attribute band_enrg real			// for printing of energy of each band
define edge attribute ring_enrg real			// for printing of energy of each ring
define facet attribute basal_enrg real			// for printing of energy of basal pole
define facet attribute api_enrg real			// for printing of energy of apical pole

//****************************************************************************************************
// Attributes for sub-elements on neighbours

define vertex attribute nringvertex integer		// To label the band number of the vertex on each
												// cringedge per band from neighbour
define vertex attribute noutervertex integer	// To label the outermost fixed vertices of the neighbours
define edge attribute nringedge integer			// To label the band number of the horizontal edges
												// underlying each band from neighbour
define edge attribute nouteredge integer		// To label the outermost basal or apical edges of neighbour
define edge attribute nbandwidth integer		// To label the band number of the vertical edge within each band
define edge attribute nbasewidth integer		// To label the vertical edge at the base of neighbour cells
define edge attribute nouterwidth integer		// To label the neighour outermost verticals
define edge attribute napiwidth integer			// To label the vertical edge at the apical of neighbour cells
define edge attribute nbandsq integer			// To label the band number of e_diag from neighbours
define edge attribute nbasesq integer			// To label the e_diag at the base of neighbour cell
define edge attribute napisq integer			// To label the e_diag at the apical of neighbour cells
define edge attribute noutersq integer			// To label the neighbour outermost e_diag
define edge attribute nringlength integer		// to record the length of each individual ring on neighbour

define facet attribute ntri integer				// To label the band number on neighbour, starting from 1
define facet attribute nbase_tri integer		// To label the basal facets on neighbour
define facet attribute napi_tri integer			// To label the apical facets on neighbour
define facet attribute nouter_tri integer		// To label the outermost lateral facets of neighbour

// The following facet attributes are for the outer faces, apical and basal regions of neighbour
define facet attribute nextzetab real
define facet attribute nextbandthickness real
define facet attribute nextbanddepoly real
define facet attribute nextbandeqmthickness real
define facet attribute nextbandviscous real

//****************************************************************************************************
// Parameters for dimensions of shape

parameter vscale = 1
parameter major = 20
parameter minor = 20
parameter apimajor = 12				// major axis length for the apical polar cap
parameter apiminor = 12				// minor axis length for the apical polar cap

parameter spacer = 6				// the spacing distance between centre cell & 1st degree neighbours

// Volume of a cylindrical center cell with a curved apical top, where apical vertex is at z=23, major=20
// After the cell is built, find the cell volume by pressing 'v' in the main command
// centre cell volume for implementing 'buildapi'
//parameter cvol = 25803.8

// centre cell volume if the special apical top is implemented
parameter cvol = 24625

//parameter nvol = 88652			// volume of neighbour

// Pressure prescribed to neighbour, representative of tissue
//parameter npress = 1

//****************************************************************************************************
// Parameters for material properties of cortex

parameter ini_bthickness = 0.3		// initial band thickness
parameter ini_bdepoly = 0.1			// initial band depolymerization rate
parameter ini_beqmthickness = 0.3	// initial band equilibrium thickness, calculated from v_p/k_d
parameter ini_bviscous = 1			// initial band viscosity

// For rings that are not activated from the beginning, and those new rings that are formed from subdivision of bands
parameter ini_rthickness = 0		// initial ring thickness
parameter ini_rdepoly = 0.3			// initial ring depolymerization rate
parameter ini_reqmthickness = 0		// initial ring equilibrium thickness, calculated from v_p/k_d
parameter ini_rviscous = 0.1		// initial ring viscosity

// For the centre cell basal contracting ring, for basal closure
parameter basecontract_rthickness = 1		// basal ring thickness
parameter basecontract_rdepoly = 0.3		// basal ring actin depolymerization rate
parameter basecontract_reqmthickness = 1	// basal ring cortex equilibrium thickness
parameter basecontract_rviscous = 0.1		// basal ring cortex viscosity

// For rings that are formed from collapsed bands
parameter active_rdepoly = 0.3			// activated ring depolymerization rate
parameter active_reqmthickness = 0.1	// activated ring equilibrium thickness, calculated from v_p/k_d
										// assigned to new rings that are activated by collapse of narrow band
parameter active_rviscous = 0.1			// activated ring viscosity

parameter ringwidth_const = 0.5		// the constant ring width to be used to calculate the addition of
									// cortex thickness to be contributed from a collapsed band
									// 'ringwidth_const' should be smaller than 'threshold_kill'

//****************************************************************************************************
// 'zetab' refers to the zeta value (contractility) on the band
// 'zetar' refers to the zeta value (contractility) on the ring

// the zetar value of the centre cell basal contracting ring, such that its tension=10
parameter basecontract_zetar_ring = 10

parameter zetab_band_baseline = 1	// the baseline zetab value of non-overactive bands on center cell
parameter zetar_ring_baseline = 1	// the baseline zetar value of non-overactive rings on center cell
parameter nzetab_band_baseline = 1	// the baseline zetab value of non-overactive bands on neighbour
parameter nzetar_ring_baseline = 0	// the baseline zetar value of non-overactive rings on neighbour,
									// set to 0 if you do not want tensions on nrings

parameter ini_threshold_subdiv = 3.8	// this is a special subdivision criteria for the bands above
										// 'basal_ring_posit' during basal closure
parameter threshold_subdiv = 3		// any band will be subdivided when width > theshold_subdiv
parameter threshold_kill = 1.2		// when any band < threshold_kill, band will be killed and refined

parameter sig_amp = 10				// the signal amplitude of overactive zone on centre cell
parameter sig_width = 32			// the width of overactive zone on centre cell in units of distance
parameter sig_eff = 31				// the effective span of the overactivity signal across the distance
									// over the bands that we want to implement on centre cell

parameter nsig_amp = 10				// the signal amplitude of overactive zone on neighbour
parameter nsig_width = 10			// the width of overactive zone on neighbour in units of distance
parameter nsig_eff = -1				// the effective span of the overactivity signal across the distance
									// over the bands that we want to implement on neighbour
									// set 'nsig_eff=-1' if you do not want contractile
									// overactive zone (COZ) on neighbour

parameter nring_minlen = 5			// the minimum length of nring that is acceptable for nref_position
parameter stable_nrthickness = 0.3 	// the ring thickness on neighbour after the nring is considered closed

parameter cbasalringtens = 10		// initial tension of the basal ring (at z=0 level) for center cell

//****************************************************************************************************
//****************************************************************************************************
// ENERGIES ******************************************************************************************

// Energy quantity for each adhesion linker
// 'energy modulus' is the 'spring stiffness'
quantity cellcelladhesion energy modulus 5 method edge_general_integral
scalar_integrand: (sqrt(x4^2 + x5^2 + x6^2) - spacer)^2		// displacement (from spacer) squared, F=k(x^2)

// Quantity to fix/constraint apical facet area
//quantity apiarea_quant info_only method facet_area
//quantity apicalfix fixed=443 method facet_area

//****************************************************************************************************
// Constraints

constraint 1
formula: z = 0

constraint 2 nonnegative
formula: z

constraint 3 nonnegative		// means z-position cannot be lower than 20um height
formula: z-20

constraint 4
formula: z = 20

//****************************************************************************************************
//vertices on centre cell
vertices
1	0	0	20		api_center 1
2	0	0	0		base_center 1	constraint 2

//****************************************************************************************************
//edges on centre cell
edges

//****************************************************************************************************
faces

//****************************************************************************************************
// to read the command file

read "extrusion_mode.cmd"

// graphics commands
set background white
s;
q
